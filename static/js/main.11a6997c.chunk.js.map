{"version":3,"sources":["data/processedSurveyData.js","components/Charts.jsx","App.js","reportWebVitals.js","index.js"],"names":["processedSurveyData","Charts","className","ResponsiveContainer","BarChart","data","this","props","ethnicities","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","genders","PureComponent","demoUrl","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a6997c.chunk.js","sourcesContent":["export const processedSurveyData = {\n   \"ethnicities\":[\n      {\n         \"White or of European descent\":\"86.56\",\n         \"Native American, Pacific Islander, or Indigenous Australian\":\"2.04\",\n         \"South or Southeast Asian\":\"4.29\",\n         \"Black or of African descent\":\"2.57\",\n         \"East Asian\":\"5.23\",\n         \"Middle Eastern\":\"1.13\",\n         \"Hispanic or Latino/Latina\":\"5.16\",\n         \"year\":\"2017\"\n      },\n      {\n         \"White or of European descent\":\"85.61\",\n         \"East Asian\":\"5.05\",\n         \"Black or of African descent\":\"2.50\",\n         \"South or Southeast Asian\":\"5.11\",\n         \"Hispanic or Latino/Latina\":\"5.33\",\n         \"Middle Eastern\":\"1.48\",\n         \"Native American, Pacific Islander, or Indigenous Australian\":\"1.67\",\n         \"year\":\"2018\"\n      },\n      {\n         \"White or of European descent\":\"84.28\",\n         \"Black or of African descent\":\"2.92\",\n         \"South or Southeast Asian\":\"5.45\",\n         \"East Asian\":\"5.10\",\n         \"Native American, Pacific Islander, or Indigenous Australian\":\"1.67\",\n         \"Hispanic or Latino/Latina\":\"6.42\",\n         \"Middle Eastern\":\"1.80\",\n         \"year\":\"2019\"\n      },\n      {\n         \"White or of European descent\":\"84.18\",\n         \"Hispanic or Latino/Latina\":\"6.89\",\n         \"East Asian\":\"4.43\",\n         \"Native American, Pacific Islander, or Indigenous Australian\":\"1.55\",\n         \"Black or of African descent\":\"3.12\",\n         \"South or Southeast Asian\":\"6.28\",\n         \"Middle Eastern\":\"2.04\",\n         \"year\":\"2020\"\n      }\n   ],\n   \"genders\":[\n      {\n         \"Male\":\"94.10\",\n         \"Female\":\"5.90\",\n         \"year\":\"2014\"\n      },\n      {\n         \"Male\":\"94.58\",\n         \"Female\":\"4.82\",\n         \"Non-binary, genderqueer, or gender non-conforming\":\"0.61\",\n         \"year\":\"2015\"\n      },\n      {\n         \"Male\":\"92.68\",\n         \"Female\":\"6.76\",\n         \"Non-binary, genderqueer, or gender non-conforming\":\"0.56\",\n         \"year\":\"2016\"\n      },\n      {\n         \"Male\":\"87.99\",\n         \"Female\":\"10.60\",\n         \"Non-binary, genderqueer, or gender non-conforming\":\"2.94\",\n         \"year\":\"2017\"\n      },\n      {\n         \"Male\":\"89.90\",\n         \"Female\":\"9.11\",\n         \"Non-binary, genderqueer, or gender non-conforming\":\"2.23\",\n         \"year\":\"2018\"\n      },\n      {\n         \"Male\":\"88.17\",\n         \"Female\":\"10.90\",\n         \"Non-binary, genderqueer, or gender non-conforming\":\"1.83\",\n         \"year\":\"2019\"\n      },\n      {\n         \"Male\":\"87.96\",\n         \"Female\":\"10.88\",\n         \"Non-binary, genderqueer, or gender non-conforming\":\"2.12\",\n         \"year\":\"2020\"\n      }\n   ]\n}","import React, { PureComponent } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n  \n  export default class Charts extends PureComponent {\n    static demoUrl = 'https://codesandbox.io/s/simple-bar-chart-tpz8r';\n  \n    render() {\n      return (\n          <>\n            <h2 className=\"chart-title\">How White Is Tech?</h2>\n            <div className=\"chart-container\">\n                <ResponsiveContainer>\n                    <BarChart data={this.props.data.ethnicities}\n                                margin={{\n                                    top: 5,\n                                    right: 30,\n                                    left: 20,\n                                    bottom: 5 }}>\n                        <XAxis dataKey=\"year\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"White or of European descent\" fill=\"#EE8434\" />\n                        <Bar dataKey=\"Hispanic or Latino/Latina\" fill=\"#9A9961\" />\n                        <Bar dataKey=\"South or Southeast Asian\" fill=\"#AE8799\" />\n                        <Bar dataKey=\"East Asian\" fill=\"#496DDB\" />\n                        <Bar dataKey=\"Black or of African descent\" fill=\"#717EC3\" />\n                        <Bar dataKey=\"Native American, Pacific Islander, or Indigenous Australian\" fill=\"#C95D63\" />\n                        <Bar dataKey=\"Middle Eastern\" fill=\"#C0BF47\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n            <p>\n                Percentage of annual StackOverflow Survey respondents in the US who identify as each ethnicity.<br></br>\n                <small>Note: respondents could identify as more than one ethnicity.</small>\n            </p>\n            <h2 className=\"chart-title\">How Masculine Is Tech?</h2>\n            <div className=\"chart-container\">\n                <ResponsiveContainer>\n                    <BarChart data={this.props.data.genders}\n                                margin={{\n                                    top: 5,\n                                    right: 30,\n                                    left: 20,\n                                    bottom: 5 }}>\n                        <XAxis dataKey=\"year\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"Male\" fill=\"#1D7874\" />\n                        <Bar dataKey=\"Female\" fill=\"#F4C095\" />\n                        <Bar dataKey=\"Non-binary, genderqueer, or gender non-conforming\" fill=\"#EE2E31\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n            <p>\n                Percentage of annual StackOverflow Survey respondents in the US who identify as each gender.<br></br>\n                <small>Note: respondents could identify as more than one gender.</small>\n            </p>\n        </>\n      );\n    }\n  }","import React from 'react';\nimport './App.css';\n//import { buildData } from './dataProcessing'\nimport { processedSurveyData } from './data/processedSurveyData'\nimport Charts from './components/Charts'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"page\">\n          <div className=\"charts-container\">\n            <Charts data={processedSurveyData}></Charts>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}